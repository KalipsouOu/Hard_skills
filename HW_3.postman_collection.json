{
	"info": {
		"_postman_id": "92ba974a-d14b-43b7-932b-dd031d9aaecd",
		"name": "HW_3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Передать приходящий токен во все остальные запросы\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"token\", jsonData.token);\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Kalipsou",
							"type": "text"
						},
						{
							"key": "password",
							"value": "qwerty",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверка структуры json в ответе\r",
							"  var schema = {\r",
							"  'type': 'object',\r",
							"  'properties': {\r",
							"    'person': {\r",
							"      'type': 'object',\r",
							"      'properties': {\r",
							"        'u_age': {\r",
							"        'type': 'integer'\r",
							"        },\r",
							"        'u_name': {\r",
							"          'type': 'array',\r",
							"          'items': [\r",
							"            {\r",
							"              'type': 'string'\r",
							"            },\r",
							"            {\r",
							"              'type': 'integer'\r",
							"            },\r",
							"            {\r",
							"              'type': 'integer'\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        'u_salary_1_5_year': {\r",
							"          'type': 'integer'\r",
							"        }\r",
							"      },\r",
							"      'required': [\r",
							"        'u_age',\r",
							"        'u_name',\r",
							"        'u_salary_1_5_year'\r",
							"      ]\r",
							"    },\r",
							"    'qa_salary_after_12_months': {\r",
							"      'type': 'number'\r",
							"    },\r",
							"    'qa_salary_after_6_months': {\r",
							"      'type': 'integer'\r",
							"    },\r",
							"    'start_qa_salary': {\r",
							"      'type': 'integer'\r",
							"    }\r",
							"  },\r",
							"  'required': [\r",
							"    'person',\r",
							"    'qa_salary_after_12_months',\r",
							"    'qa_salary_after_6_months',\r",
							"    'start_qa_salary'\r",
							"  ]\r",
							"};\r",
							"pm.test('Checkin the .json schema', function() {\r",
							"  pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
							"});\r",
							"\r",
							"// В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент\r",
							"var jsonData = pm.response.json();\r",
							"var salary = jsonData.start_qa_salary; \r",
							"var salary_6m = jsonData.qa_salary_after_6_months;\r",
							"var salary_12m = jsonData.qa_salary_after_12_months;\r",
							"var salary_18m = jsonData.person.u_salary_1_5_year;\r",
							"\r",
							"pm.test('salary_after_6_months = start_qa_salary*2', function () {\r",
							"    pm.expect(salary_6m).to.eql(salary*2);\r",
							"    });\r",
							"pm.test('salary_after_12_months = start_qa_salary*2.9', function () {\r",
							"    pm.expect(salary_12m).to.eql(salary*2.9);\r",
							"    });\r",
							"pm.test('u_salary_1.5_year = salary*4', function () {\r",
							"    pm.expect(salary_18m).to.eql(salary*4);\r",
							"    });\r",
							"\r",
							"// Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user\r",
							"pm.environment.set(\"salary_18m\", jsonData.person.u_salary_1_5_year);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": 29,\r\n    \"salary\": 3000, \r\n    \"name\": \"Lena\",\r\n    \"auth_token\": \"{{token}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверка структуры json в ответе\r",
							"var schema = {\r",
							"'type': 'object',\r",
							"  'properties': {\r",
							"    'age': {\r",
							"      'type': 'integer'\r",
							"    },\r",
							"    'name': {\r",
							"      'type': 'string'\r",
							"    },\r",
							"    'salary': {\r",
							"      'type': 'array',\r",
							"      'items': [\r",
							"        {\r",
							"          'type': 'integer'\r",
							"        },\r",
							"        {\r",
							"          'type': 'string'\r",
							"        },\r",
							"        {\r",
							"          'type': 'string'\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  'required': [\r",
							"    'age',\r",
							"    'name',\r",
							"    'salary'\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test('Checkin the .json schema', function() {\r",
							"  pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
							"});\r",
							"\r",
							"// В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент\r",
							"var jsonData = pm.response.json();\r",
							"var salary = jsonData.salary[0]; \r",
							"var salary_2 = Number(jsonData.salary[1]);\r",
							"var salary_3 = Number(jsonData.salary[2]);\r",
							"\r",
							"console.log(salary); // checking the correct variable declaration\r",
							"\r",
							"pm.test('salary_2 = salary*2', function () {\r",
							"    pm.expect(salary_2).to.eql(salary*2);\r",
							"    });\r",
							"pm.test('salary_3 = salary*3', function () {\r",
							"    pm.expect(salary_3).to.eql(salary*3);\r",
							"    });\r",
							"\r",
							"// Проверить, что 2-й элемент массива salary больше 1-го и 0-го\r",
							"pm.test('salary_3 > salary', function () {\r",
							"    pm.expect(salary_3).to.above(salary);\r",
							"});\r",
							"\r",
							"pm.test('salary_3 > salary_2', function () {\r",
							"    pm.expect(salary_3).to.above(salary_2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "3000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Lena",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверка структуры json в ответе\r",
							"var jsonData = pm.response.json();\r",
							"var schema = {\r",
							"'type': 'object',\r",
							"  'properties': {\r",
							"    'age': {\r",
							"        'type': 'integer'\r",
							"    },\r",
							"    'daily_food': {\r",
							"        'type': 'number'\r",
							"    },\r",
							"    'daily_sleep': {\r",
							"        'type': 'number',\r",
							"    },\r",
							"    'name': {\r",
							"        'type': 'string',\r",
							"    }\r",
							"  },\r",
							"    'required': [\r",
							"    'age',\r",
							"    'daily_food',\r",
							"    'daily_sleep',\r",
							"    'name'\r",
							"  ]\r",
							"}\r",
							"pm.test('Checkin the .json schema', function() {\r",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"// В ответе указаны коэффициенты умножения weight, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"var reqData = request.data; // parsing from request\r",
							"var weight = reqData.weight;\r",
							"var daily_food = jsonData.daily_food;\r",
							"var daily_sleep = jsonData.daily_sleep;\r",
							"\r",
							"console.log(weight); // // checking the correct variable declarationt\r",
							"\r",
							"pm.test('daily_food = weight*0.012', function () {\r",
							"    pm.expect(daily_food).to.eql(weight*0.012);\r",
							"});\r",
							"\r",
							"pm.test('daily_sleep = weight*2.5', function () {\r",
							"    pm.expect(daily_sleep).to.eql(weight*2.5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "55",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Lena",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверка структуры json в ответе\r",
							"var jsonData = pm.response.json();\r",
							"var schema = {\r",
							"'type': 'object',\r",
							"  'properties': {\r",
							"    'age': {\r",
							"      'type': 'string'\r",
							"    },\r",
							"    'family': {\r",
							"      'type': 'object',\r",
							"      'properties': {\r",
							"        'children': {\r",
							"          'type': 'array',\r",
							"          'items': [\r",
							"            {\r",
							"              'type': 'array',\r",
							"              'items': [\r",
							"                {\r",
							"                  'type': 'string'\r",
							"                },\r",
							"                {\r",
							"                  'type': 'integer'\r",
							"                }\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              'type': 'array',\r",
							"              'items': [\r",
							"                {\r",
							"                  'type': 'string'\r",
							"                },\r",
							"                {\r",
							"                  'type': 'integer'\r",
							"                }\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        'u_salary_1_5_year': {\r",
							"          'type': 'integer'\r",
							"        }\r",
							"      },\r",
							"      'required': [\r",
							"        'children',\r",
							"        'u_salary_1_5_year'\r",
							"      ]\r",
							"    },\r",
							"    'name': {\r",
							"      'type': 'string'\r",
							"    },\r",
							"    'salary': {\r",
							"      'type': 'integer'\r",
							"    }\r",
							"  },\r",
							"  'required': [\r",
							"    'age',\r",
							"    'family',\r",
							"    'name',\r",
							"    'salary'\r",
							"  ]\r",
							"};\r",
							"\r",
							"pm.test('Testing the correct .json schema', function () {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"// Проверить что занчение поля name = значению переменной name из окружения\r",
							"var name_resp = jsonData.name;\r",
							"var name_env = pm.environment.get(\"name\");\r",
							"pm.test('Name_resp = name_env', function () {\r",
							"    pm.expect(name_resp).to.eql(name_env);\r",
							"});\r",
							"\r",
							"// Проверить что значение поля age в ответе соответсвует отправленному в запросе значению поля age\r",
							"var age_resp = jsonData.age;\r",
							"var reqData = request.data;\r",
							"var age_req = reqData.age;\r",
							"\r",
							"pm.test('age_resp = age_req', function () {\r",
							"    pm.expect(age_resp).to.eql(age_req);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary_18m}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Lena",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Можете взять любой объект из присланного списка, используйте js random. В объекте возьмите Cur_ID и передать через окружение в следующий запрос\r",
							"var jsonData = pm.response.json(); \r",
							"var random = jsonData[Math.floor(Math.random()*(jsonData.length))];\r",
							"console.log(random); // checking \r",
							"\r",
							"for (var i = 371; i < jsonData.length; i++) {\r",
							"    pm.sendRequest({\r",
							"        url: 'http://162.55.220.72:5005/currency',\r",
							"        method: 'POST',\r",
							"        header:  {'Content-Type':'multipart/form-data'},\r",
							"        body: {\r",
							"            mode: 'formdata',\r",
							"            formdata: [\r",
							"                {key: 'auth_token', value: pm.environment.get('token'), disabled: false}\r",
							"            ]\r",
							"        }\r",
							"    }, function (error, repsonse) {\r",
							"        if (response.status == 200) {\r",
							"            console.log('-----', i['Cur_ID']);\r",
							"            return response.json();\r",
							"        }\r",
							"\r",
							"        });\r",
							"};\r",
							"\r",
							"var Cur_ID = random.Cur_ID;\r",
							"pm.environment.set('Cur_ID', Cur_ID);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверка структуры json в ответе\r",
							"var schema = {\r",
							"  'type': 'object',\r",
							"  'properties': {\r",
							"    'Cur_Abbreviation': {\r",
							"      'type': 'string'\r",
							"    },\r",
							"    'Cur_ID': {\r",
							"      'type': 'integer'\r",
							"    },\r",
							"    'Cur_Name': {\r",
							"      'type': 'string'\r",
							"    },\r",
							"    'Cur_OfficialRate': {\r",
							"      'type': 'number'\r",
							"    },\r",
							"    'Cur_Scale': {\r",
							"      'type': 'integer'\r",
							"    },\r",
							"    'Date': {\r",
							"      'type': 'string'\r",
							"    }\r",
							"  },\r",
							"  'required': [\r",
							"    'Cur_Abbreviation',\r",
							"    'Cur_ID',\r",
							"    'Cur_Name',\r",
							"    'Cur_OfficialRate',\r",
							"    'Cur_Scale',\r",
							"    'Date'\r",
							"  ]\r",
							"};\r",
							"pm.test('Checkin the .json schema', function() {\r",
							"  pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{Cur_ID}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/curr_byn",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}